; This file was automatically generated, do not edit.
; Edit file manifest/main.ml instead.

(library
 (name tezos_protocol_environment_$PROTOCOL_NAME$)
 (public_name tezos-protocol-$PROTOCOL-NAME$.environment)
 (instrumentation (backend bisect_ppx))
 (libraries
  custom-protocol-helper
  tezos-protocol-environment)
 (library_flags (:standard -linkall))
 (modules Tezos_protocol_environment_$PROTOCOL_NAME$))

(rule
 (targets tezos_protocol_environment_$PROTOCOL_NAME$.ml)
 (action
  (write-file
   %{targets}
   "module Name = struct let name = \"$PROTOCOL-NAME$\" end\ninclude Tezos_protocol_environment.V$VERSION$.Make(Name)()\n")))


(library
 (name tezos_raw_protocol_$PROTOCOL_NAME$)
 (public_name tezos-protocol-$PROTOCOL-NAME$.raw)
 (instrumentation (backend bisect_ppx))
 (libraries
  ppx_deriving_encoding
  tezos-protocol-$PROTOCOL-NAME$.environment)
 (library_flags (:standard -linkall))
 (flags
  (:standard)
  -nostdlib
  -nopervasives
  -open Tezos_protocol_environment_$PROTOCOL_NAME$
  -open Tezos_protocol_environment_$PROTOCOL_NAME$.Pervasives
  -open Tezos_protocol_environment_$PROTOCOL_NAME$.Error_monad)
 (preprocess (pps ppx_deriving_encoding))
 (modules
   TEMPLATE_MODULES_PART
  ))

(library
 (name tezos_protocol_$PROTOCOL_NAME$)
 (public_name tezos-protocol-$PROTOCOL-NAME$)
 (instrumentation (backend bisect_ppx))
 (libraries
  tezos-protocol-environment
  tezos-protocol-environment.sigs
  tezos-protocol-$PROTOCOL-NAME$.raw)
 (flags
  (:standard)
  -nopervasives)
 (modules Protocol Tezos_protocol_$PROTOCOL_NAME$))

(install
 (package tezos-protocol-$PROTOCOL-NAME$)
 (section lib)
 (files (TEZOS_PROTOCOL as raw/TEZOS_PROTOCOL)))

(rule
 (targets protocol.ml)
 (action
  (write-file
   %{targets}
   "\nlet hash = Tezos_crypto.Protocol_hash.of_b58check_exn \"$PROTOCOL_HASH$\"\nlet name = Tezos_protocol_environment_$PROTOCOL_NAME$.Name.name\ninclude Tezos_raw_protocol_$PROTOCOL_NAME$\ninclude Tezos_raw_protocol_$PROTOCOL_NAME$.Main\n")))

(rule
 (targets tezos_protocol_$PROTOCOL_NAME$.ml)
 (action
  (write-file
   %{targets}
   "\nmodule Environment = Tezos_protocol_environment_$PROTOCOL_NAME$\nmodule Protocol = Protocol\n")))

(rule
 (alias runtest_compile_protocol)
 (deps
   TEMPLATE_FILES_PART
  (:src_dir TEZOS_PROTOCOL))
 (action (run %{bin:octez-protocol-compiler} -no-hash-check -warn-error +a .)))

(library
 (name tezos_protocol_$PROTOCOL_NAME$_functor)
 (libraries
  tezos-protocol-environment
  tezos-protocol-environment.sigs)
 (flags
  (:standard)
  -nopervasives)
 (modules Functor))

(rule
 (targets functor.ml)
 (deps
   TEMPLATE_FILES_PART
 (:src_dir TEZOS_PROTOCOL))
 (action
  (with-stdout-to
   %{targets}
   (chdir
    %{workspace_root}
    (run %{bin:octez-protocol-compiler.octez-protocol-packer} %{src_dir})))))

(library
 (name tezos_embedded_protocol_$PROTOCOL_NAME$)
 (public_name tezos-embedded-protocol-$PROTOCOL-NAME$)
 (instrumentation (backend bisect_ppx))
 (libraries
  tezos-protocol-$PROTOCOL-NAME$
  tezos-protocol-updater
  tezos-protocol-environment)
 (library_flags (:standard -linkall))
 (modules Registerer))

(rule
 (targets registerer.ml)
 (deps
   TEMPLATE_FILES_PART
  (:src_dir TEZOS_PROTOCOL))
 (action
  (with-stdout-to
   %{targets}
   (chdir
    %{workspace_root}
    (run %{bin:octez-embedded-protocol-packer} %{src_dir} $PROTOCOL_NAME$)))))


(env (_ 
    (env-vars 
        (PPX_ENCODING_DEBUG true)
)))
